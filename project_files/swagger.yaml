openapi: 3.0.0
info:
  title: TV Shows API
  description: |
    API for managing TV show dataset with authentication via API key.
    
    ## Authentication
    All endpoints require an API key passed in the `X-API-Key` header.
    
    ## Pagination
    List endpoints support pagination using `page` and `limit` query parameters.
    - Default page: 1
    - Default limit: 20
    - Maximum limit: 100
  version: 1.0.0
  contact:
    name: TCSS 460 Project Group 7
    email: support7@tvshowapi.com # we can change to our own or just leave it

servers:
  # API location
  - url: http://localhost:3000/api
    description: Development server
  - url: https://api.tvshows.com/api
    description: Production server

tags:
  - name: TV Shows
    description: Operations related to TV show data
  - name: Search & Filter
    description: Search and filter TV shows

security:
  # Ensures that all endpoints require API key
  - ApiKeyAuth: []

paths:
  # TV Shows Endpoints
  /tvshows: # URL path
    get: # HTTP method like GET, POST, PUT, DELETE
      tags:
        - TV Shows
      summary: Get all TV shows
      description: Gets all TV shows from the database, split into pages for easier loading (aka pagination)
      parameters: # what the users can send in a request, ex: page #s
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses: # what the API will send back (either success or error)
        '200':
          description: Successfully retrieved TV shows
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TVShow'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    post:
      tags:
        - TV Shows
      summary: Add a new TV show
      description: Creates a new TV show entry in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TVShowInput'
      responses:
        '201':
          description: TV show created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: TV show created successfully
                  data:
                    $ref: '#/components/schemas/TVShow'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tvshows/{id}:
    get:
      tags:
        - TV Shows
      summary: Get a TV show by ID
      description: Retrieves a single TV show by its unique ID
      parameters:
        - name: id
          in: path
          description: Unique ID of the TV show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved TV show
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/TVShow'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      tags:
        - TV Shows
      summary: Update a TV show
      description: Updates an existing TV show by ID
      parameters:
        - name: id
          in: path
          description: Unique ID of the TV show
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TVShowInput'
      responses:
        '200':
          description: TV show updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: TV show updated successfully
                  data:
                    $ref: '#/components/schemas/TVShow'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags:
        - TV Shows
      summary: Delete a TV show
      description: Removes a TV show from the database by ID
      parameters:
        - name: id
          in: path
          description: Unique ID of the TV show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: TV show deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: TV show deleted successfully
        '404':
          $ref: '#/components/responses/NotFoundError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tvshows/search:
    get:
      tags:
        - Search & Filter
      summary: Search TV shows by name
      description: Search for TV shows by title/name (partial match supported)
      parameters:
        - name: name
          in: query
          description: TV show name to search for
          required: true
          schema:
            type: string
            example: "Breaking Bad"
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TVShow'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tvshows/filter/genre:
    get:
      tags:
        - Search & Filter
      summary: Filter TV shows by genre
      description: Get TV shows filtered by one or more genres
      parameters:
        - name: genre
          in: query
          description: Genre to filter by (e.g., Drama, Comedy, Action)
          required: true
          schema:
            type: string
            example: "Drama"
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved filtered TV shows
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TVShow'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tvshows/filter/status:
    get:
      tags:
        - Search & Filter
      summary: Filter TV shows by status
      description: Get TV shows filtered by their current status
      parameters:
        - name: status
          in: query
          description: Status to filter by
          required: true
          schema:
            type: string
            enum: [Ended, Returning Series, Canceled, In Production, Planned]
            example: "Returning Series"
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved filtered TV shows
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TVShow'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tvshows/filter/year:
    get:
      tags:
        - Search & Filter
      summary: Filter TV shows by year range
      description: Get TV shows that aired within a specified year range
      parameters:
        - name: start_year
          in: query
          description: Start year of the range
          required: true
          schema:
            type: integer
            example: 2020
        - name: end_year
          in: query
          description: End year of the range
          required: true
          schema:
            type: integer
            example: 2024
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved filtered TV shows
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TVShow'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tvshows/sort/rating:
    get:
      tags:
        - Search & Filter
      summary: Get TV shows sorted by rating
      description: Retrieves TV shows sorted by their TMDb rating
      parameters:
        - name: order
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved sorted TV shows
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TVShow'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tvshows/sort/popularity:
    get:
      tags:
        - Search & Filter
      summary: Get TV shows sorted by popularity
      description: Retrieves TV shows sorted by their popularity score
      parameters:
        - name: order
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved sorted TV shows
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TVShow'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError' 

  /tvshows/random: 
    get:
      tags:
        - Search & Filter
      summary: Get a random TV show
      description: Returns a single random TV show from the database - great for discovering new shows!
      responses:
        '200':
          description: Successfully retrieved a random TV show
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/TVShow'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'           

components:
  # SECURITY & DATA MODELS SECTION
  # Defines API key authentication and the structure of TV show data
  
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key required for all endpoints

  schemas:
    TVShow:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the TV show
          example: 1
        name:
          type: string
          description: Current name of the TV show
          example: "Breaking Bad"
        original_name:
          type: string
          description: Original name of the TV show
          example: "Breaking Bad"
        first_air_date:
          type: string
          format: date
          description: Date of the first episode
          example: "2008-01-20"
        last_air_date:
          type: string
          format: date
          description: Date of the last episode
          example: "2013-09-29"
        seasons:
          type: integer
          description: Number of seasons
          example: 5
        episodes:
          type: integer
          description: Total number of episodes
          example: 62
        status:
          type: string
          description: Current status of the TV show
          enum: [Ended, Returning Series, Canceled, In Production, Planned]
          example: "Ended"
        genres:
          type: string
          description: Comma-separated list of genres
          example: "Drama, Crime, Thriller"
        overview:
          type: string
          description: Brief description or synopsis of the TV show
          example: "A high school chemistry teacher turned methamphetamine manufacturer"
        popularity:
          type: number
          format: float
          description: Popularity score
          example: 345.678
        tmdb_rating:
          type: number
          format: float
          description: TMDb rating score
          example: 8.9
        vote_count:
          type: integer
          description: Number of votes
          example: 12543

    TVShowInput:
      type: object
      required:
        - name
        - first_air_date
        - status
      properties:
        name:
          type: string
          description: Current name of the TV show
          example: "Better Call Saul"
        original_name:
          type: string
          description: Original name of the TV show
          example: "Better Call Saul"
        first_air_date:
          type: string
          format: date
          description: Date of the first episode
          example: "2015-02-08"
        last_air_date:
          type: string
          format: date
          description: Date of the last episode (optional)
          example: "2022-08-15"
        seasons:
          type: integer
          description: Number of seasons
          example: 6
        episodes:
          type: integer
          description: Total number of episodes
          example: 63
        status:
          type: string
          description: Current status of the TV show
          enum: [Ended, Returning Series, Canceled, In Production, Planned]
          example: "Ended"
        genres:
          type: string
          description: Comma-separated list of genres
          example: "Drama, Crime"
        overview:
          type: string
          description: Brief description or synopsis of the TV show
          example: "The trials and tribulations of criminal lawyer Jimmy McGill"
        popularity:
          type: number
          format: float
          description: Popularity score
          example: 234.567
        tmdb_rating:
          type: number
          format: float
          description: TMDb rating score
          example: 8.7
        vote_count:
          type: integer
          description: Number of votes
          example: 8432

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        total_pages:
          type: integer
          example: 50
        total_items:
          type: integer
          example: 1000
        items_per_page:
          type: integer
          example: 20

  # All possible error responses
  # 400 = Bad request (user sent wrong data)
  # 401 = Unauthorized (bad API key)
  # 404 = Not found (TV show doesn't exist)
  # 500 = Server error (something broke)

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          description: Error message
          example: "Invalid request parameters"

  responses:
    BadRequestError:
      description: Bad request - Invalid input parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error: "Invalid request parameters"
    
    UnauthorizedError:
      description: Unauthorized - Invalid or missing API key
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error: "Invalid or missing API key"
    
    NotFoundError:
      description: Not found - Resource does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error: "TV show not found"
    
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            error: "Internal server error"
